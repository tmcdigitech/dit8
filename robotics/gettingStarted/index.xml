<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on TMC - 8 Digital Tech</title><link>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/</link><description>Recent content in Getting Started on TMC - 8 Digital Tech</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="https://tmcdigitech.github.io/dit8/robotics/gettingStarted/index.xml" rel="self" type="application/rss+xml"/><item><title>Software</title><link>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/software/</guid><description>To control the LEGO Mindstorms robots running ev3dev, you will need to:
Open the Company Portal: Find and install Visual Studio Code (NOT Visual Studio Community): Install the EV3 MicroPython extension</description></item><item><title>Using the EV3</title><link>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/using/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/using/</guid><description>Taken from pybricks.com
Turning the EV3 Brick on and off Turn on the EV3 Brick by pressing the dark gray center button.
The boot process may take several minutes. While booting, the EV3 Brick status light turns orange and blinks intermittently, and you’ll see a lot of text on the EV3 screen. The EV3 Brick is ready for use when the status light turns green.
To turn the EV3 Brick off, open the shutdown menu with the back button, and then select Power Off using the center button, as shown in Figure 5.</description></item><item><title>Creating and running programs</title><link>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/programs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/programs/</guid><description>Taken from pybricks.com
Now that you’ve set up your computer and EV3 Brick, you’re ready to start writing programs.
To make it easier to create and manage your programs, let’s first have a quick look at how MicroPython projects and programs for your EV3 robots are organized.
Programs are organized into project folders, as shown in Figure 8. A project folder is a directory/folder on your computer that contains the main program (main.</description></item><item><title>Structure of program</title><link>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/structure/</guid><description>For obscure, historical reasons, the first line must look exactly like this. If it doesn&amp;rsquo;t, your program won&amp;rsquo;t work at all. Accidentally adding a blank line above or a space before is a common reason your code will break.
1 #!/usr/bin/env pybricks-micropython The next lines are some explanatory text about what the program in this file does. It is a good habit to do this in Python, but your program will work if you don&amp;rsquo;t.</description></item><item><title>Movement</title><link>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/movement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/movement/</guid><description>adapted from PyBricks
Set up Having to control the two motors independently to move our robot would involve a lot of maths and be annoying and prone to error. Instead, we can use the DriveBase class to make driving our robot around a lot simpler.
We still need to initialize the motors:
# Initialize the motors. left_motor = Motor(Port.B) right_motor = Motor(Port.C) But then we write this to create our DriveBase:</description></item><item><title>Touch Sensor</title><link>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/touch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/touch/</guid><description>adapted from PyBricks Touch Sensor A sensor lets an EV3 program measure and collect data about is surroundings. The Touch Sensor can detect when the sensor’s red button has been pressed or released.
Example Code #!/usr/bin/env pybricks-micropython from pybricks import ev3brick as brick from pybricks.ev3devices import (Motor, TouchSensor, ColorSensor, InfraredSensor, UltrasonicSensor, GyroSensor) from pybricks.parameters import (Port, Stop, Direction, Button, Color, SoundFile, ImageFile, Align) from pybricks.</description></item><item><title>Colour Sensor</title><link>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/colour/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/gettingStarted/colour/</guid><description>adapted from PyBricks Colour Sensor A sensor lets an EV3 program measure and collect data about is surroundings. The Colour Sensor can detect colour and reflected light.
Three modes: Colour, Reflected Light Intensity and Ambient Light Intensity – Color Mode: Recognizes 7 colours (black, brown, blue, green, yellow, red, white) and No Color
– Reflected Light: Measures the intensity of the light reflected back from a lamp that emits a red light.</description></item></channel></rss>