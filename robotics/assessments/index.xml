<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Assessment tasks on TMC - 8 Digital Tech</title><link>https://tmcdigitech.github.io/dit8/robotics/assessments/</link><description>Recent content in Assessment tasks on TMC - 8 Digital Tech</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><atom:link href="https://tmcdigitech.github.io/dit8/robotics/assessments/index.xml" rel="self" type="application/rss+xml"/><item><title>Follow the line</title><link>https://tmcdigitech.github.io/dit8/robotics/assessments/followTheLine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/assessments/followTheLine/</guid><description>In teams (of up to 2), design algorithms using flowcharts to create an automated, driverless vehicle that can stop at line and follow a line. Explore how an automated vehicle might be guided along a road or track and how line detection could be used to save lives. Design ways to improve driving safety by helping to prevent drivers from falling asleep and causing an accident.
Task Description You will need to complete all the following sections as part of your collaborative presentation:</description></item><item><title>FTL help</title><link>https://tmcdigitech.github.io/dit8/robotics/assessments/followTheLineCheat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/assessments/followTheLineCheat/</guid><description>Part 1 from pybricks.hubs import EV3Brick from pybricks.ev3devices import Motor from pybricks.parameters import Port from pybricks.robotics import DriveBase from pybricks.tools import wait from pybricks.ev3devices import (Motor, TouchSensor, ColorSensor, InfraredSensor, UltrasonicSensor, GyroSensor) # Initialize the EV3 Brick. ev3 = EV3Brick() # Initialize the motors. left_motor = Motor(Port.B) right_motor = Motor(Port.C) # Initialize the Touch Sensor. # touch_sensor = TouchSensor(Port.S1) # Initialize the Colour Sensor. color_sensor = ColorSensor(Port.</description></item><item><title>Obstacle Course</title><link>https://tmcdigitech.github.io/dit8/robotics/assessments/obstacleCourse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/dit8/robotics/assessments/obstacleCourse/</guid><description>In teams of two, you will design algorithms using flowcharts to create an automated, driverless vehicle that can navigate an obstacle course. You will then adapt your code to use a touch sensor and an ultrasonic sensor to complete the same course, and make comparisons between the solutions.
This challenge features a sequence of turns that the robot must perform in order to get to the &amp;ldquo;end&amp;rdquo; of the course. The robot must begin at the starting point and get to the goal area by completing turning and forward movement behaviours.</description></item></channel></rss>