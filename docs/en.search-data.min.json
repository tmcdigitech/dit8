[{"id":0,"href":"/pgz/03walkthroughs/gemCatcher/","title":"Gem Catcher","parent":"Walk-throughs","content":" First program update() Adding a gem Collision and Random Keeping Score Mouse and Events Game Over Challenges  "},{"id":1,"href":"/pgz/01gettingStarted/","title":"Getting started","parent":"8 DigiTech","content":""},{"id":2,"href":"/pgz/02basics/python/","title":"Python","parent":"Learning the basics","content":"If you are new to Python, here is an good interactive guide you can get started with:\nAposteriori: Introduction to Python\n"},{"id":3,"href":"/pgz/02basics/","title":"Learning the basics","parent":"8 DigiTech","content":""},{"id":4,"href":"/pgz/03walkthroughs/ninjaRunner/","title":"Ninja Runner","parent":"Walk-throughs","content":" Infinite Runner Background Ninja Jumping Obstacles Keeping Score Game Over Challenges and Bugs  "},{"id":5,"href":"/pgz/02basics/pygameZero/","title":"Pygame Zero","parent":"Learning the basics","content":"Let\u0026rsquo;s get a simple game happening, a bit at a time, so you can see how you might go about it yourself.\nAll of these examples are complete programs, so make sure you copy them into Mu (or whatever editor you\u0026rsquo;re using) and run them as you go through this page.\nScreen size    Let\u0026rsquo;s start by setting the size of the screen.\n1 2 3 4 5 6  import pgzrun WIDTH = 800 HEIGHT = 600 pgzrun.go() # Must be last line   Background    Now let\u0026rsquo;s add a coloured background. To do this we need to define a function called draw(), which Pygame Zero will call every time it needs to redraw the screen:\n1 2 3 4 5 6 7 8 9  import pgzrun WIDTH = 800 HEIGHT = 600 def draw(): screen.fill((128, 0, 0)) pgzrun.go() # Must be last line   Why the double brackets?\nNotice that we had to use two sets of brackets in that example to set the colour of the background. In Pygame Zero, colours are always written as a set of three numbers like this: (0, 130, 255), which in Python is called a tuple (rhyming with \u0026lsquo;couple\u0026rsquo;). A tuple is indicated with round brackets. But the function also takes a set of round brackets, so we know it is a function. So the outer set of brackets belongs to the fill() function call, and the inside set to the tuple for the colour.  Basic shapes    Let\u0026rsquo;s add a couple of basic shapes.\n1 2 3 4 5 6 7 8 9 10  import pgzrun WIDTH = 800 HEIGHT = 600 def draw(): screen.fill((128, 0, 0)) screen.draw.filled_circle((0,150), 10, (200, 100, 200))  pgzrun.go() # Must be last line   The filled_circle() command takes three bits of information, known as arguments:\n the co-ordinates of the circle\u0026rsquo;s centre (x, y) as a tuple, the radius, the colour (r, g, b) as a tuple.  "},{"id":6,"href":"/pgz/03walkthroughs/tankGame/","title":"Tanks","parent":"Walk-throughs","content":" Battle City 1985       Tank Moving the tank Background and Walls Randomizing the Walls Blocking Movements Tank Cannon Destroying Walls One Enemy Enemy Bullets Many Enemies Winning and Losing  "},{"id":7,"href":"/pgz/03walkthroughs/","title":"Walk-throughs","parent":"8 DigiTech","content":""},{"id":8,"href":"/pgz/03walkthroughs/chaseGame/","title":"Chase game","parent":"Walk-throughs","content":"Chase game\n"},{"id":9,"href":"/pgz/03walkthroughs/mazeGame/","title":"Maze game","parent":"Walk-throughs","content":"Maze game\nIntroduces tile maps\n"},{"id":10,"href":"/pgz/03walkthroughs/shootingGame/","title":"Shooting game","parent":"Walk-throughs","content":"Shooting game\n"},{"id":11,"href":"/pgz/03walkthroughs/racingGame/","title":"Racing game","parent":"Walk-throughs","content":"Racing game\n"},{"id":12,"href":"/pgz/03walkthroughs/verticalShooter/","title":"Vertical shooter","parent":"Walk-throughs","content":" Twin Bee  "},{"id":13,"href":"/pgz/03walkthroughs/minesweeper/","title":"Minesweeper","parent":"Walk-throughs","content":"Minesweeper originated in the 1960s but reached an enormous audience when a port was included in the standard install of Windows 3.1 in 1992.\n Minesweeper, as seen in Windows 98\n  Here is a link to Google\u0026rsquo;s web-based implementation.\nKeeping track of the board    This game will keep track of the board state using text.\nAt the start of the game, the board will only contain   (a safe square) and x (a bomb). The user can assert that a square is safe, or that it has a bomb. If they assert it has a bomb, we won\u0026rsquo;t tell them if they are wrong or right, but we need to keep track of it ourselves. We replace:\n . with ? (a safe square that they think has a bomb), and x with X (a bomb square that they think has a bomb).  If they assert that a square is safe, either it was a safe square, and we replace:\n . with o,  or they have triggered a bomb, and the game ends.\nHere is a possible 10x10 board in its initial state:\nboard = [\u0026#34;......x...\u0026#34;, \u0026#34;.x........\u0026#34;, \u0026#34;.x.....x..\u0026#34;, \u0026#34;..........\u0026#34;, \u0026#34;....x.....\u0026#34;, \u0026#34;....xx....\u0026#34;, \u0026#34;..........\u0026#34;, \u0026#34;..x....x..\u0026#34;, \u0026#34;.....x....\u0026#34;] We can now try drawing the board.\n "},{"id":14,"href":"/pgz/glossary/","title":"Glossary","parent":"8 DigiTech","content":""},{"id":15,"href":"/pgz/03walkthroughs/moreTutorials/","title":"More walk-throughs","parent":"Walk-throughs","content":"Simple Game Tutorials for Python and Pygame Zero 1.2\n"},{"id":16,"href":"/pgz/troubleshooting/","title":"Troubleshooting","parent":"8 DigiTech","content":""},{"id":17,"href":"/pgz/reference/","title":"Reference materials","parent":"8 DigiTech","content":" Pygame Zero documentation Physics for Game Developers Teaching a kid to code with Pygame Zero  "},{"id":18,"href":"/pgz/teaching/","title":"Teaching materials","parent":"8 DigiTech","content":""},{"id":19,"href":"/pgz/","title":"8 DigiTech","parent":"","content":"Welcome to Year 8 Digital Technology!\n"},{"id":20,"href":"/pgz/glossary/argument/","title":"argument","parent":"Glossary","content":"When calling a function, the values given to it are called arguments. For example, in this case:\ntotal = add(3, 4) 3 and 4 are arguments to the function add().\nWhen defining a function, the pieces of information that the function takes to do its job are called parameters.\n"},{"id":21,"href":"/pgz/categories/","title":"Categories","parent":"8 DigiTech","content":""},{"id":22,"href":"/pgz/glossary/coordinate/","title":"co-ordinate system","parent":"Glossary","content":"In most programming environments (such as Pygame Zero), the screen co-ordinate system uses (x, y) co-ordinates, with the origin (0, 0) in the top left corner of the screen, with x to the right, and y going down.\nEverything to be displayed on the screen must be rastered, which means rendered into a grid of colored pixels.\n"},{"id":23,"href":"/pgz/glossary/color/","title":"color/colour","parent":"Glossary","content":"In almost all programming, American spellings are used. So as programmers we use colors, even though we would normally spell the word colours.\nFor most programming, colors are described by the amount of red, green, and blue light to emit. These numbers are normally in the range 0-255. In Pygame Zero, we list these as a tuple (red, green, blue), such as:\n(0, 150, 255) You can use the Google Color Picker to find different colors, and then copy the RGB value listed.\n"},{"id":24,"href":"/pgz/glossary/parameter/","title":"parameter","parent":"Glossary","content":"When defining a function, the pieces of information that the function takes to do its job are called parameters. For example, here:\ndef add(first, second): return first + second first and second are the parameters of the function add().\nWhen calling a function, the values given to it are called arguments.\n"},{"id":25,"href":"/pgz/teaching/projectCheckpoint/","title":"Project checkpoint ðŸ¡„ðŸ¡†","parent":"Teaching materials","content":"By Thursday Week 5, your video game should include the following features:\n Individual Actor Sprites - the game should use your own choice of pictures Collectibles - there should be an item the player collects (e.g gems in gemcatcher) Collision events - what happens when your player crashes into walls, collectibles and other characters Active scoreboard - show the current score on screen and update in real time Internal comments - Use comments to explain what your code is doing.  # This is a comment. Good programs have these. https://tmcdigitech.github.io/pgz/\n"},{"id":26,"href":"/pgz/teaching/siteUrl/","title":"Site URL ðŸ¡„ðŸ¡†","parent":"Teaching materials","content":"Learn about Pygame Zero here:\nhttps://tmcdigitech.github.io/pgz/\n"},{"id":27,"href":"/pgz/01gettingStarted/installation/","title":"Software","parent":"Getting started","content":"To develop games using Pygame Zero, you have two main options:\n use Mu use another editor  Mu is set up to be very helpful for beginners. It has some keyboard shortcuts, good help text, nice shortcut buttons, and is generaly very friendly to use and has a lot of features to help beginners get started.\nAfter you have been writing code for a while, you may find that a standard Python environment and a \u0026ldquo;full\u0026rdquo; text editor like Visual Studio Code allows you a lot more power and flexibility, at the cost of doing some more basic things yourself.\nAn example of this is that Mu will automatically add the necessary first and last lines to your Pygame Zero file.\nThe very top line, line 1, must read:\nimport pgzrun And the very last line must read:\npgzrun.go() If you are using Mu, it will automatically add these lines if you forget. With VS Code or another editor, you will need to do this yourself.\nUsing Mu    Install Mu, using the Company Portal (on a school computer), or from the website. You\u0026rsquo;re done!\nThere is a beginner\u0026rsquo;s guide to Mu, if you want more help on how to use Mu.\nTo make games in Pygame Zero, make sure you select the mode Pygame Zero.\nUsing Visual Studio Code    From the Company Portal (on a school computer), or using the links below, install:\n Visual Studio Code Python  "},{"id":28,"href":"/pgz/01gettingStarted/fileStructure/","title":"Structuring your files","parent":"Getting started","content":"Each of your projects should live in its own folder somewhere sensible (like in a Digital Tech folder in your OneDrive!).\nproject/ â”œâ”€â”€ game.py â”‚ â”œâ”€â”€ images/ â”‚ â”œâ”€â”€ someImage.jpg â”‚ â”œâ”€â”€ anotherImage.jpg â”‚ â””â”€â”€ ... # sprites, tiles and other image files â”‚ â”œâ”€â”€ fonts/ â”‚ â””â”€â”€ ... # any font files â”‚ â”œâ”€â”€ sounds/ â”‚ â””â”€â”€ ... # any sound files â”‚ â””â”€â”€ music/ â””â”€â”€ ... # any music files You don\u0026rsquo;t need to have those folders unless you have something to put in them.\nCheck your version of Mu\nIf you are using a version of Mu older than 1.1.0-alpha.2, the shortcut buttons in Pygame Zero mode (Images, Sounds, Fonts and Music) will open folders in Mu\u0026rsquo;s default save location. If you have saved your project in a different location (like your OneDrive) you won\u0026rsquo;t be able to use these shortcut buttons, as they won\u0026rsquo;t open the right folders.\nFrom 1.1.0-alpha.2 onwards, the buttons will open folders relative to the file you have open, so they will always work, regardless of where you save your game file.\n "},{"id":29,"href":"/pgz/tags/","title":"Tags","parent":"8 DigiTech","content":""},{"id":30,"href":"/pgz/glossary/tuple/","title":"tuple","parent":"Glossary","content":"A tuple is a single unit of data made up of multiple values. In Python they are defined using round brackets, with commas separating the values. Tuples can contain all sorts of data as values, but in Pygame Zero we use them most often for colors (red, green, blue) and co-ordinates (x, y).\n"},{"id":31,"href":"/pgz/troubleshooting/01whybroken/","title":"Why won't my program work?","parent":"Troubleshooting","content":"Here is a checklist of things to look for if something is wrong\u0026hellip;\nSpelling and Capitalisation    Remember that the computer is really, really, really, really stupid. It will recognise only words it has been taught; it is not clever enough to handle spelling mistakes - these will confuse it. It is also not clever enough to know that most of the time we use A and a interchangeably, so you have to make sure that if the computer is expecting a capital letter, you give it one, and vice versa.\n"}]