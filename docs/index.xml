<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>8 DigiTech on TMC - Pygame Zero</title>
    <link>https://tmcdigitech.github.io/pgz/</link>
    <description>Recent content in 8 DigiTech on TMC - Pygame Zero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-au</language><atom:link href="https://tmcdigitech.github.io/pgz/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gem Catcher</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/gemCatcher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/gemCatcher/</guid>
      <description> First program update() Adding a gem Collision and Random Keeping Score Mouse and Events Game Over Challenges  </description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://tmcdigitech.github.io/pgz/02basics/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/02basics/python/</guid>
      <description>If you are new to Python, here is an good interactive guide you can get started with:
Aposteriori: Introduction to Python</description>
    </item>
    
    <item>
      <title>Ninja Runner</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/ninjaRunner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/ninjaRunner/</guid>
      <description> Infinite Runner Background Ninja Jumping Obstacles Keeping Score Game Over Challenges and Bugs  </description>
    </item>
    
    <item>
      <title>Pygame Zero</title>
      <link>https://tmcdigitech.github.io/pgz/02basics/pygameZero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/02basics/pygameZero/</guid>
      <description>Let&amp;rsquo;s get a simple game happening, a bit at a time, so you can see how you might go about it yourself.
All of these examples are complete programs, so make sure you copy them into Mu (or whatever editor you&amp;rsquo;re using) and run them as you go through this page.
Screen size    Let&amp;rsquo;s start by setting the size of the screen.
1 2 3 4 5 6  import pgzrun WIDTH = 800 HEIGHT = 600 pgzrun.</description>
    </item>
    
    <item>
      <title>Tanks</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/tankGame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/tankGame/</guid>
      <description> Battle City 1985       Tank Moving the tank Background and Walls Randomizing the Walls Blocking Movements Tank Cannon Destroying Walls One Enemy Enemy Bullets Many Enemies Winning and Losing  </description>
    </item>
    
    <item>
      <title>Chase game</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/chaseGame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/chaseGame/</guid>
      <description>Chase game</description>
    </item>
    
    <item>
      <title>Maze game</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/mazeGame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/mazeGame/</guid>
      <description>Maze game
Introduces tile maps</description>
    </item>
    
    <item>
      <title>Shooting game</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/shootingGame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/shootingGame/</guid>
      <description>Shooting game</description>
    </item>
    
    <item>
      <title>Racing game</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/racingGame/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/racingGame/</guid>
      <description>Racing game</description>
    </item>
    
    <item>
      <title>Vertical shooter</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/verticalShooter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/verticalShooter/</guid>
      <description> Twin Bee  </description>
    </item>
    
    <item>
      <title>Minesweeper</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/minesweeper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/minesweeper/</guid>
      <description>Minesweeper originated in the 1960s but reached an enormous audience when a port was included in the standard install of Windows 3.1 in 1992.
 Minesweeper, as seen in Windows 98
  Here is a link to Google&amp;rsquo;s web-based implementation.
Keeping track of the board    This game will keep track of the board state using text.
At the start of the game, the board will only contain   (a safe square) and x (a bomb).</description>
    </item>
    
    <item>
      <title>More walk-throughs</title>
      <link>https://tmcdigitech.github.io/pgz/03walkthroughs/moreTutorials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/03walkthroughs/moreTutorials/</guid>
      <description>Simple Game Tutorials for Python and Pygame Zero 1.2</description>
    </item>
    
    <item>
      <title>argument</title>
      <link>https://tmcdigitech.github.io/pgz/glossary/argument/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/glossary/argument/</guid>
      <description>When calling a function, the values given to it are called arguments. For example, in this case:
total = add(3, 4) 3 and 4 are arguments to the function add().
When defining a function, the pieces of information that the function takes to do its job are called parameters.</description>
    </item>
    
    <item>
      <title>co-ordinate system</title>
      <link>https://tmcdigitech.github.io/pgz/glossary/coordinate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/glossary/coordinate/</guid>
      <description>In most programming environments (such as Pygame Zero), the screen co-ordinate system uses (x, y) co-ordinates, with the origin (0, 0) in the top left corner of the screen, with x to the right, and y going down.
Everything to be displayed on the screen must be rastered, which means rendered into a grid of colored pixels.</description>
    </item>
    
    <item>
      <title>color/colour</title>
      <link>https://tmcdigitech.github.io/pgz/glossary/color/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/glossary/color/</guid>
      <description>In almost all programming, American spellings are used. So as programmers we use colors, even though we would normally spell the word colours.
For most programming, colors are described by the amount of red, green, and blue light to emit. These numbers are normally in the range 0-255. In Pygame Zero, we list these as a tuple (red, green, blue), such as:
(0, 150, 255) You can use the Google Color Picker to find different colors, and then copy the RGB value listed.</description>
    </item>
    
    <item>
      <title>parameter</title>
      <link>https://tmcdigitech.github.io/pgz/glossary/parameter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/glossary/parameter/</guid>
      <description>When defining a function, the pieces of information that the function takes to do its job are called parameters. For example, here:
def add(first, second): return first + second first and second are the parameters of the function add().
When calling a function, the values given to it are called arguments.</description>
    </item>
    
    <item>
      <title>Project checkpoint ðŸ¡„ðŸ¡†</title>
      <link>https://tmcdigitech.github.io/pgz/teaching/projectCheckpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/teaching/projectCheckpoint/</guid>
      <description>By Thursday Week 5, your video game should include the following features:
 Individual Actor Sprites - the game should use your own choice of pictures Collectibles - there should be an item the player collects (e.g gems in gemcatcher) Collision events - what happens when your player crashes into walls, collectibles and other characters Active scoreboard - show the current score on screen and update in real time Internal comments - Use comments to explain what your code is doing.</description>
    </item>
    
    <item>
      <title>Site URL ðŸ¡„ðŸ¡†</title>
      <link>https://tmcdigitech.github.io/pgz/teaching/siteUrl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/teaching/siteUrl/</guid>
      <description>Learn about Pygame Zero here:
https://tmcdigitech.github.io/pgz/</description>
    </item>
    
    <item>
      <title>Software</title>
      <link>https://tmcdigitech.github.io/pgz/01gettingStarted/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/01gettingStarted/installation/</guid>
      <description>To develop games using Pygame Zero, you have two main options:
 use Mu use another editor  Mu is set up to be very helpful for beginners. It has some keyboard shortcuts, good help text, nice shortcut buttons, and is generaly very friendly to use and has a lot of features to help beginners get started.
After you have been writing code for a while, you may find that a standard Python environment and a &amp;ldquo;full&amp;rdquo; text editor like Visual Studio Code allows you a lot more power and flexibility, at the cost of doing some more basic things yourself.</description>
    </item>
    
    <item>
      <title>Structuring your files</title>
      <link>https://tmcdigitech.github.io/pgz/01gettingStarted/fileStructure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/01gettingStarted/fileStructure/</guid>
      <description>Each of your projects should live in its own folder somewhere sensible (like in a Digital Tech folder in your OneDrive!).
project/ â”œâ”€â”€ game.py â”‚ â”œâ”€â”€ images/ â”‚ â”œâ”€â”€ someImage.jpg â”‚ â”œâ”€â”€ anotherImage.jpg â”‚ â””â”€â”€ ... # sprites, tiles and other image files â”‚ â”œâ”€â”€ fonts/ â”‚ â””â”€â”€ ... # any font files â”‚ â”œâ”€â”€ sounds/ â”‚ â””â”€â”€ ... # any sound files â”‚ â””â”€â”€ music/ â””â”€â”€ ... # any music files You don&amp;rsquo;t need to have those folders unless you have something to put in them.</description>
    </item>
    
    <item>
      <title>tuple</title>
      <link>https://tmcdigitech.github.io/pgz/glossary/tuple/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/glossary/tuple/</guid>
      <description>A tuple is a single unit of data made up of multiple values. In Python they are defined using round brackets, with commas separating the values. Tuples can contain all sorts of data as values, but in Pygame Zero we use them most often for colors (red, green, blue) and co-ordinates (x, y).</description>
    </item>
    
    <item>
      <title>Why won&#39;t my program work?</title>
      <link>https://tmcdigitech.github.io/pgz/troubleshooting/01whybroken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tmcdigitech.github.io/pgz/troubleshooting/01whybroken/</guid>
      <description>Here is a checklist of things to look for if something is wrong&amp;hellip;
Spelling and Capitalisation    Remember that the computer is really, really, really, really stupid. It will recognise only words it has been taught; it is not clever enough to handle spelling mistakes - these will confuse it. It is also not clever enough to know that most of the time we use A and a interchangeably, so you have to make sure that if the computer is expecting a capital letter, you give it one, and vice versa.</description>
    </item>
    
  </channel>
</rss>
